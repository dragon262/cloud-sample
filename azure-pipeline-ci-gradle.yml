# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

variables:
  imageRepository: 'cloudsample'
  tag: '$(Build.BuildId)'

pool:
  vmImage: ubuntu-latest

steps:
- task: MavenAuthenticate@0
  inputs:
    artifactsFeeds: 'ce-pg-stude-peed'
- task: Gradle@2
  env:
    SYSTEM_ACCESSTOKEN: $(System.AccessToken)
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'build'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.17'
    sonarQubeRunAnalysis: false
    spotBugsAnalysis: false

- task: CopyFiles@2
  displayName: 'Copy scripts'
  inputs:
    contents: 'build/libs/**'
    targetFolder: '$(Build.ArtifactStagingDirectory)'

- publish: '$(Build.ArtifactStagingDirectory)/build/libs'
  displayName: 'Publish jar'
  artifact: drop

#- task: Docker@2
#  inputs:
#    containerRegistry: 'cepgstapacr'
#    repository: $(imageRepository)
#    command: 'push'
#    tags: |
#      $(tag)
